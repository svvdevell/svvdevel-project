// prerender.js - –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö HTML –∑ –º–µ—Ç–∞—Ç–µ–≥–∞–º–∏
import puppeteer from 'puppeteer';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è —Ä–æ—É—Ç—ñ–≤ –∑ SEO –º–µ—Ç–∞–¥–∞–Ω–∏–º–∏ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é
const routes = [
    {
        path: '/',
        title: 'Elegance Auto - –í–∏–∫—É–ø —Ç–∞ –ø—Ä–æ–¥–∞–∂ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤ –û–¥–µ—Å—ñ',
        description: '–í–∏–≥—ñ–¥–Ω–∏–π –≤–∏–∫—É–ø –≤–∞—à–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è —Ç–∞ –ø—Ä–æ–¥–∞–∂ —è–∫—ñ—Å–Ω–∏—Ö –∞–≤—Ç–æ –≤ –û–¥–µ—Å—ñ. –®–≤–∏–¥–∫–∞ –æ—Ü—ñ–Ω–∫–∞, —á–µ—Å–Ω—ñ —É–º–æ–≤–∏, —à–∏—Ä–æ–∫–∏–π –≤–∏–±—ñ—Ä –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤.',
        keywords: '–≤–∏–∫—É–ø –∞–≤—Ç–æ –û–¥–µ—Å–∞, –ø—Ä–æ–¥–∞–∂ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –û–¥–µ—Å–∞, –∞–≤—Ç–æ—Å–∞–ª–æ–Ω –û–¥–µ—Å–∞, –∫—É–ø–∏—Ç–∏ –∞–≤—Ç–æ –û–¥–µ—Å–∞',
        ogImage: 'https://eleganceauto.od.ua/images/og-home.jpg'
    },
    {
        path: '/contact',
        title: '–ö–æ–Ω—Ç–∞–∫—Ç–∏ - Elegance Auto | –í–∏–∫—É–ø –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤ –û–¥–µ—Å—ñ',
        description: '–ó–≤\'—è–∂—ñ—Ç—å—Å—è –∑ –Ω–∞–º–∏ –¥–ª—è –≤–∏–∫—É–ø—É –≤–∞—à–æ–≥–æ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è. –ü—Ä–∞—Ü—é—î–º–æ –≤ –û–¥–µ—Å—ñ —Ç–∞ –æ–±–ª–∞—Å—Ç—ñ. –®–≤–∏–¥–∫–∞ –æ—Ü—ñ–Ω–∫–∞ —Ç–∞ –≤–∏–≥—ñ–¥–Ω—ñ —É–º–æ–≤–∏.',
        keywords: '–∫–æ–Ω—Ç–∞–∫—Ç–∏ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω –û–¥–µ—Å–∞, –≤–∏–∫—É–ø –∞–≤—Ç–æ —Ç–µ–ª–µ—Ñ–æ–Ω, –∞–¥—Ä–µ—Å–∞ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω—É',
        ogImage: 'https://eleganceauto.od.ua/images/og-contact.jpg'
    },
    {
        path: '/catalog',
        title: '–ö–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ - Elegance Auto –û–¥–µ—Å–∞',
        description: '–í–µ–ª–∏–∫–∏–π –≤–∏–±—ñ—Ä —è–∫—ñ—Å–Ω–∏—Ö –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –≤ –û–¥–µ—Å—ñ. –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω—ñ –∞–≤—Ç–æ –∑ –ø–æ–≤–Ω–æ—é —ñ—Å—Ç–æ—Ä—ñ—î—é, —á–µ—Å–Ω—ñ —Ü—ñ–Ω–∏ —Ç–∞ –≥–∞—Ä–∞–Ω—Ç—ñ—è.',
        keywords: '–∫–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ –û–¥–µ—Å–∞, –∫—É–ø–∏—Ç–∏ –∞–≤—Ç–æ –û–¥–µ—Å–∞, –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ',
        ogImage: 'https://eleganceauto.od.ua/images/og-catalog.jpg'
    }
];

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –º–µ—Ç–∞–¥–∞–Ω–∏—Ö –º–∞—à–∏–Ω–∏ –∑ API
async function getCarMetadata(carId) {
    try {
        const response = await fetch(`https://eleganceauto.od.ua/api/cars-sale/${carId}`);
        const data = await response.json();

        if (data.status === 'success' && data.data) {
            const car = data.data;
            const title = `${car.brand} ${car.model} ${car.year} - ${car.price.toLocaleString('uk-UA')} –≥—Ä–Ω`;
            const description = `${car.brand} ${car.model} ${car.year} —Ä–æ–∫—É, ${car.color}, ${car.fuel}, ${car.transmission}, –ø—Ä–æ–±—ñ–≥ ${car.mileage.toLocaleString('uk-UA')} –∫–º. –¶—ñ–Ω–∞: ${car.price.toLocaleString('uk-UA')} –≥—Ä–Ω. ${car.description || ''}`.slice(0, 160);

            return {
                path: `/cars/${carId}`,
                title: title,
                description: description,
                keywords: `${car.brand} ${car.model} –∫—É–ø–∏—Ç–∏, ${car.brand} ${car.model} –û–¥–µ—Å–∞, ${car.brand} —Ü—ñ–Ω–∞, –∞–≤—Ç–æ ${car.year}`,
                ogImage: car.images && car.images[0] ? `https://eleganceauto.od.ua${car.images[0].fileUrl}` : 'https://eleganceauto.od.ua/images/og-default.jpg'
            };
        }
    } catch (error) {
        console.error(`–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–ª—è –∞–≤—Ç–æ ${carId}:`, error);
    }
    return null;
}

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –∞–≤—Ç–æ –∑ API
async function getAllCarIds() {
    try {
        const response = await fetch('https://eleganceauto.od.ua/api/cars-sale');
        const data = await response.json();

        if (data.status === 'success' && Array.isArray(data.data)) {
            return data.data.map(car => car.id);
        }
    } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∞–≤—Ç–æ:', error);
    }
    return [];
}

// –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –∑ –º–µ—Ç–∞—Ç–µ–≥–∞–º–∏
function generateHTML(route) {
    return `<!DOCTYPE html>
<html lang="uk">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  
  <!-- –û—Å–Ω–æ–≤–Ω—ñ –º–µ—Ç–∞-—Ç–µ–≥–∏ -->
  <title>${route.title}</title>
  <meta name="description" content="${route.description}">
  <meta name="keywords" content="${route.keywords}">
  
  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://eleganceauto.od.ua${route.path}">
  <meta property="og:title" content="${route.title}">
  <meta property="og:description" content="${route.description}">
  <meta property="og:image" content="${route.ogImage}">
  <meta property="og:locale" content="uk_UA">
  
  <!-- Twitter -->
  <meta name="twitter:card" content="summary_large_image">
  <meta name="twitter:url" content="https://eleganceauto.od.ua${route.path}">
  <meta name="twitter:title" content="${route.title}">
  <meta name="twitter:description" content="${route.description}">
  <meta name="twitter:image" content="${route.ogImage}">
  
  <!-- –î–æ–¥–∞—Ç–∫–æ–≤—ñ SEO —Ç–µ–≥–∏ -->
  <meta name="robots" content="index, follow">
  <meta name="googlebot" content="index, follow">
  <link rel="canonical" href="https://eleganceauto.od.ua${route.path}">
  
  <!-- Structured Data (JSON-LD) -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "${route.path.includes('/cars/') ? 'Car' : 'AutoDealer'}",
    "name": "${route.title}",
    "description": "${route.description}",
    "url": "https://eleganceauto.od.ua${route.path}",
    "image": "${route.ogImage}"
  }
  </script>
  
  <script type="module" crossorigin src="/assets/index.js"></script>
  <link rel="stylesheet" href="/assets/index.css">
</head>
<body>
  <div id="app"></div>
</body>
</html>`;
}

// –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è prerendering
async function prerender() {
    const distPath = path.join(__dirname, 'dist');

    console.log('üöÄ –ü–æ—á–∞—Ç–æ–∫ prerendering...\n');

    // –î–æ–¥–∞—î–º–æ –¥–∏–Ω–∞–º—ñ—á–Ω—ñ —Ä–æ—É—Ç–∏ –¥–ª—è –º–∞—à–∏–Ω
    const carIds = await getAllCarIds();
    console.log(`üì¶ –ó–Ω–∞–π–¥–µ–Ω–æ ${carIds.length} –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤ –¥–ª—è prerendering\n`);

    for (const carId of carIds) {
        const carRoute = await getCarMetadata(carId);
        if (carRoute) {
            routes.push(carRoute);
        }
    }

    // –ì–µ–Ω–µ—Ä—É—î–º–æ HTML –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä–æ—É—Ç—É
    for (const route of routes) {
        try {
            const html = generateHTML(route);

            // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–ª—è —Ä–æ—É—Ç—É
            const routePath = route.path === '/' ? 'index.html' : route.path;
            const fullPath = path.join(distPath, routePath);
            const dir = path.dirname(fullPath);

            if (!fs.existsSync(dir)) {
                fs.mkdirSync(dir, { recursive: true });
            }

            // –ó–∞–ø–∏—Å—É—î–º–æ HTML —Ñ–∞–π–ª
            const fileName = routePath.endsWith('.html') ? fullPath : path.join(fullPath, 'index.html');
            fs.writeFileSync(fileName, html, 'utf-8');

            console.log(`‚úÖ ${route.path} -> ${fileName}`);
        } catch (error) {
            console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–ª—è ${route.path}:`, error);
        }
    }

    console.log(`\nüéâ Prerendering –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û–±—Ä–æ–±–ª–µ–Ω–æ ${routes.length} —Å—Ç–æ—Ä—ñ–Ω–æ–∫.`);
}

// –ó–∞–ø—É—Å–∫
prerender().catch(console.error);